"===========PLUGINS==========="
" PLUGIN: Pathogen
" Add a plugin to this list to disable it
let g:pathogen_disabled = []
source ~/local/vim/vimfiles/autoload/pathogen.vim
execute pathogen#infect()

" PLUGIN: External non-plugin source files
source ~/local/vim/rc/align.vim
source ~/local/vim/rc/custom_font_functions.vim
source ~/local/vim/rc/custom_misc_functions.vim
source ~/local/vim/rc/custom_pep8_functions.vim
source ~/local/vim/rc/custom_regex_functions.vim
source ~/local/vim/rc/custom_py_functions.vim
source ~/local/vim/rc/custom_tex_functions.vim
source ~/local/vim/rc/commands.vim

"===========Settings==========="
source ~/local/vim/rc_settings/plugin_settings.vim
source ~/local/vim/rc_settings/gui_settings.vim
source ~/local/vim/rc_settings/behavior_settings.vim
source ~/local/vim/rc_settings/autocommand_settings.vim
source ~/local/vim/rc_settings/remap_settings.vim


" Trial / project / temporary vimrc commands
" If they are good put them into a settings file

"___________________
" Quick File Access:
"___________________
" vimrc
:call QUICKOPEN_leader_tsio('b', '~/local/bashrc.sh')
:call QUICKOPEN_leader_tsio(',', '~/local/vim/portable_vimrc')
:call QUICKOPEN_leader_tsio('r', '~/local/vim/rc/custom_regex_commands.vim')
"___________________
" TOOLS
:call QUICKOPEN_leader_tsio('u', '~/code/utool/utool/__init__.py')
:call QUICKOPEN_leader_tsio('v', '~/code/vtool/vtool/__init__.py')
:call QUICKOPEN_leader_tsio('p', '~/code/plottool/plottool/__init__.py')
"___________________
"___________________
" IBEIS
" Often used
:call QUICKOPEN_leader_tsio('a', '~/code/ibeis/ibeis/dev/all_imports.py')
:call QUICKOPEN_leader_tsio('d', '~/code/ibeis/dev.py')
:call QUICKOPEN_leader_tsio('c', '~/code/ibeis/ibeis/control/IBEISControl.py')
:call QUICKOPEN_leader_tsio('t', '~/code/ibeis/ibeis/tests')
:call QUICKOPEN_leader_tsio('f', '~/code/ibeis/ibeis/dev/ibsfuncs.py')
:call QUICKOPEN_leader_tsio('m', '~/code/ibeis/ibeis/main_module.py')

:call QUICKOPEN_leader_tsio('z', '~/code/ibeis/ibeis/viz/viz_qres.py')
:call QUICKOPEN_leader_tsio('x', '~/code/ibeis/ibeis/viz/interact/interact_qres.py')

:call QUICKOPEN_leader_tsio('h', '~/code/ibeis/ibeis/model/hots/match_chips3.py')

:call QUICKOPEN_leader_tsio('e', '~/code/ibeis/ibeis/dev/experiment_printres.py')

:call QUICKOPEN_leader_tsio('1', '~/code/hesaff/pyhesaff/_pyhesaff.py')
:call QUICKOPEN_leader_tsio('2', '~/code/ibeis/ibeis/dev/params.py')
:call QUICKOPEN_leader_tsio('3', '~/code/guitool/guitool/guitool_tables.py')
:call QUICKOPEN_leader_tsio('4', '~/code/ibeis/ibeis/dev/results_organizer.py')
:call QUICKOPEN_leader_tsio('5', '~/local/bashrc.sh')
:call QUICKOPEN_leader_tsio('6', '~/code/pyrf')
:call QUICKOPEN_leader_tsio('8', '~/code/flann/src/python/pyflann/flann_ctypes.py')
:call QUICKOPEN_leader_tsio('0', '~/code/ibeis/_scripts/_timeits')

:call QUICKOPEN_leader_tsio('o', '~/code/ibeis/ibeis/model/preproc/preproc_image.py')
:call QUICKOPEN_leader_tsio('j', '~/code/ibeis/ibeis/injest/injest_hsdb.py')
:call QUICKOPEN_leader_tsio('n', '~/code/ibeis/ibeis/model/Config.py')
:call QUICKOPEN_leader_tsio('g', '~/code/ibeis/ibeis/gui/guiback.py')


""""""""""""""""""""""""""""""""""
func! OpenSetups()
python << endpython
import vim
from os.path import expanduser
setup_files = [
'~/code/ibeis/setup.py',
'~/code/utool/setup.py',
'~/code/vtool/setup.py',
'~/code/hesaff/setup.py',
'~/code/detecttools/setup.py',
'~/code/pyrf/setup.py',
'~/code/guitool/setup.py',
'~/code/plottool/setup.py',
]

vim.command(":exec ':tabe %s'" % expanduser(setup_files[0]))
vim.command(":set nofoldenable")
vim.command(":exec ':vsplit %s'" % expanduser(setup_files[1]))
vim.command(":set nofoldenable")
for ix in xrange(2, 5):
    vim.command(":exec ':split %s'" % expanduser(setup_files[ix]))
    vim.command(":set nofoldenable")
vim.command(":exec ':wincmd l'")
for ix in xrange(5, 8):
    vim.command(":exec ':split %s'" % expanduser(setup_files[ix]))
    vim.command(":set nofoldenable")
endpython
endfu

noremap <Leader><F1> :call OpenSetups()<CR>
noremap <Leader>qt :tabclose<CR>
map <C-F4> <Esc>:tabclose<CR>

""""""""""""""""""""""""""""""""""

func! MagicPython()
    "https://dev.launchpad.net/UltimateVimPythonSetup
    let python_highlight_all = 1
    set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
    python << EOF
import os
import sys
import vim
for p in sys.path:
    if os.path.isdir(p):
        vim.command(r"set path+=%s" % (p.replace(" ", r"\ ")))
EOF
endfu

call MagicPython()
