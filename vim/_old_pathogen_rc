"===========PLUGINS==========="
" PLUGIN: Pathogen
"

if has('win32')
    set pythonthreedll=$USERPROFILE\Miniconda3\python36.dll
    echo $pythonthreedll
    "command! -nargs=1 Python2or3 python3 <args>
endif

if has('python3')
    command! -nargs=1 Python2or3 python3 <args>
elseif has('python')
    command! -nargs=1 Python2or3 python <args>
else
    echo "Error: Requires Vim compiled with +python or +python3"
    finish
endif


Python2or3 << EOF
import sys
#print('sys.executable = {!r}'.format(sys.executable))
import os
import vim

def get_disabled_plugins():
    """
    Returns a list of disabled plugin names

    SeeAlso:
        ~/local/init/ensure_vim_plugins.py
        # list of plugins are in
        ~/local/init/REPOS1.py
    """
    WIN32 = sys.platform.startswith('win32')
    UNIX = not WIN32
    UNIX = True  # HACK
    flag = True

    # Set flag to be false to disable plugin
    known_plugins = [
        (flag, 'nerdtree'),

        (flag, 'nerdcommenter'),
        (flag, 'tagbar'),

        (flag, 'vimtk'),

        (flag & UNIX, 'supertab'),
        (flag & UNIX, 'vim-startify'),
        (flag, 'vim-searchindex'),
        #(flag, 'vim-devicons'),

        #(flag & UNIX, 'syntastic'),
        (flag, 'syntastic'),
        (flag, 'jedi-vim'),
        (flag, 'LaTeX-Box'),
        (flag, 'vim-markdown'),
        (flag, 'vim-syntax-markdown'),
        (False, 'vim-colors-solarized'),

        (flag, 'ultisnips'),
        (flag, 'vim-snippets'),
        (False, 'vim-powerline'),
        (flag, 'vim-virtualenv'),
        (flag, 'vim-autopep8'),

        (flag, 'AnsiEsc.vim'),
        (flag, 'unicode.vim'),
        (flag, 'badwolf'),
        #(flag, 'rainbow_parentheses.vim'),
        #(flag, 'closetag.vim'),
        #(flag, 'gruvbox'),
        #(flag, 'codeschool-vim-theme'),
        #(flag, 'phd'),
        (flag & UNIX, 'taglist.vim'),  # ctags

        (False & UNIX, 'vim-buffergator'),
        #(False, 'vim-ipython'), 
        #(False, 'vim-quickopen-tvio'),
        (False, 'vim-fugitive'), (False, 'csv.vim'), (False, 'grep.vim'), 
        (False, 'vim-repeat'), (False, 'Conque-Shell'),
        (False, 'highlight.vim'), (False, 'vim-airline'), 
        (False, 'vim-multiple-cursors'), (False, 'vim-sensible'), 
        (False, 'vim-surround'), (False, 'vim-unimpaired'),
        (False, 'vim-vimtweak'),
    ] 
    disabled = [name for flag, name in known_plugins if not flag]

    if True:
        enabled = [name for flag, name in known_plugins if flag]
        all_plugins = set(disabled + enabled)
        plugin_dirs = set(os.listdir(os.path.expanduser('~/local/vim/vimfiles/bundle')))
        unregistered_plugins = plugin_dirs - all_plugins
        if len(unregistered_plugins) > 0:
            print('Warning: portable_vimrc found unregistered plugin(s) = %r' %
                (unregistered_plugins,))
    return disabled

disabled = get_disabled_plugins()
disabled_str = '[' + (', '.join(['"%s"' % (name,) for name in disabled])) + ']'

vim.command('let g:pathogen_disabled = ' + disabled_str)
EOF

":ECHOVAR runtimepath
"# http://stackoverflow.com/questions/6639786/pathogen-vim-non-default-bundle-directory-location
:set nocp  " https://github.com/tpope/vim-pathogen/issues/50

source ~/local/vim/vimfiles/autoload/pathogen.vim
:call pathogen#infect('bundle/{}')

":call pathogen#runtime_append_all_bundles('bundle')
":call pathogen#incubate('bundle/{}')
"execute pathogen#infect()
"call pathogen#helptags()
"call pathogen#infect()
