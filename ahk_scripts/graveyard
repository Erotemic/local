       ;     IfWinExist ahk_class Console_2_Main  {
       ;         IfWinActive ahk_class Console_2_Main  {
       ;             WinMinimize
       ;         }
       ;         else  {
       ;             WinActivate
       ;         }
       ;     }
       ; else  {
       ;     EnvGet hsdir, HOTSPOTTER
       ;         Run,  "Console" -d %hsdir% 
       ; }

; --- Straight up function keys yo
;f1::
;    Send, :`%s/
;    return
; return #
; return `;

;^!1::
;    Send, :s/{^}/{`;}/{Enter}
;    return
;^!2::
;    Send, :s/{^}\( *\){`;}/\1/{Enter}
;    return
;    return


!$CAPSLOCK::
    Send, {Up}
    return
;---------------------
;f5::
;    cwd := get_cwd()
;    RunWait, gvim.exe -c "ConqueTerm cmd", WorkingDir %cwd%"
;    return
;;---------------------
;NumPadPgUp::
;    Send, {Enter}
;    return

;NumpadPgDn::

;    IfWinExist ahk_class ConsoleWindowClass
;    {
;        IfWinActive ahk_class ConsoleWindowClass
;        {
;        }
;        else
;        {
;        WinActivate
;        }
;        Send, cd D:\dev\src\HotSpotter\HotSpotterPython
;        Send, {Enter}
;    }
;    else
;    {
;        SetWorkingDir, D:\dev\src\HotSpotter\HotSpotterPython
;        Run, cmd
;    }
    ;Send {CtrlBreak}
    ;Send {CtrlBreak}
    ;Send {CtrlBreak}
;    Send, cd D:\dev\src\HotSpotter\HotSpotterPython\
;    Send, {Enter}
;    Send, cls
;    Send, {Enter}
;    Send, python D:\dev\src\HotSpotter\HotSpotterPython\Core.py
;    Send, {Enter}
;return

;IfWinActive ahk_class Vim
;IfWinActive ahk_class Console_2_Main
;#IfWinNotActive ahk_class Chrome_WidgetWin_1
;#IfWinNotActive ahk_class Vim
;f5:: 
;    MsgBox, Hello Mom 
;    return
#ifwinactive


;an amazing Vim find commandhack
;#IfWinExist ahk_class Chrome_WidgetWin_1
;/::
;Send, ^f
;return 
;#IfWinExist


;Disable capslocks
;$CAPSLOCK::
;return


;SetTitleMatchMode, 2
;SetTitleMatchMode, Slow

    Send ^c

    ;---------------------
NumPadHome::
IfWinExist ahk_class Console_2_Main
{
    IfWinActive ahk_class Console_2_Main
    {
        Send, ^{Tab}
    }
    else
    {
    WinActivate
    }
}
else
{
    Run, Console -t ROB -t HotSpotterPython
}
return



;f6::
NumpadPgDn::
    IfWinExist cmd - 1
    {
        IfWinActive cmd - 1
        {
        }
        else
        {
        WinActivate
        }
    }
    else
    {
       ; Run, "C:\Program Files (x86)\PowerCmd\PowerCmd.exe" 
        SetWorkingDir, D:\dev\src\HotSpotter\HotSpotterPython
        RunWait, gvim.exe -c "ConqueTerm cmd", WorkingDir D:\dev\src\HotSpotter\HotSpotterPython
        WinWaitActive cmd - 1
        Send i
    }
    WinWaitActive cmd - 1
    ;Send, cls {Enter} 
    ;Send, {Enter}
    ;Sleep, 300
    SendInput, python Core.py
    SendInput, {Enter} 
return


;OpenCmdInCWD()
;{
;    ; This is required to get the full path of the file from the address bar
;        WinGetText, full_path, A
;        ; Split on newline (`n)
;        StringSplit, word_array, full_path, `n
;        ; Take the first element from the array
;        full_path = %word_array1%   
;        ; strip to bare address
;        full_path := RegExReplace(full_path, "^Address: ", "")
;        ; Just in case - remove all carriage returns (`r)
;        StringReplace, full_path, full_path, `r, , all
;        IfInString full_path, \
;            {
;            Run,  Console -d "%full_path%"
;            }
;    else
;        {
;        Run, Console -d "D:\dev\src\Hotspotter\HotSpotterPython"
;        }
;}

;^,::
;SelectMin("CabinetWClass","")
;return
;SelectMin(classtype, command)
;{
;    IfWinExist ahk_class %classtype%
;    {
;        IfWinActive ahk_class %classtype%
;        {
;            WinMinimize
;        }
;        else 
;        {
;            WinActivate
;        }
;    }
;    else 
;    {
;        RunWait ::{20d04fe0-3aea-1069-a2d8-08002b30309d}
;    }
;    return
;}

;ToggleWinMinimize(TheWindowTitle)
;{
;    SetTitleMatchMode,2
;        DetectHiddenWindows, Off
;        IfWinActive, %TheWindowTitle%
;            {
;            WinMinimize, %TheWindowTitle%
;            }
;    Else
;        {
;        IfWinExist, %TheWindowTitle%
;            {
;            WinGet, winid, ID, %TheWindowTitle%
;                DllCall("SwitchToThisWindow", "UInt", winid, "UInt", 1)
;            }
;        }
;    Return
;}

QuitAndRunLastCmdInCMD()
{
   IfWinExist ahk_class ConsoleWindowClass 
            {
                WinActivate
            }
    Sleep, 50            
    SendInput , ^c
    Sleep, 50
    SendInput , ^c
    Sleep, 10
    SendInput , {Enter}
    Sleep, 10    
    SendInput , ^d
    Sleep, 10
    SendInput , ^d
    Sleep, 350
    SendInput , ^c
    Sleep, 10
    SendInput , {Up}
    Sleep, 10
    SendInput , {Enter}
return
}
